name: Build CLI and Server

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    name: Build binaries
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
          - os: ubuntu-latest
            output_name: linux
          - os: macos-latest
            output_name: darwin

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Read Go version from go.mod
        id: go-version
        run: |
          GO_VERSION=$(grep -E '^go [0-9]+\.[0-9]+' go.mod | awk '{print $2}')
          echo "GO_VERSION=${GO_VERSION}" >> $GITHUB_OUTPUT

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ steps.go-version.outputs.GO_VERSION }}

      - name: Build CLI
        run: |
          go build -o sse-proxy-cli-${{ matrix.output_name }} ./cmd/cli
        env:
          GOOS: ${{ matrix.output_name }}
          GOARCH: amd64

      - name: Build Server
        run: |
          go build -o sse-proxy-server-${{ matrix.output_name }} .
        env:
          GOOS: ${{ matrix.output_name }}
          GOARCH: amd64

      - name: Upload CLI artifact
        uses: actions/upload-artifact@v3
        with:
          name: sse-proxy-cli-${{ matrix.output_name }}
          path: sse-proxy-cli-${{ matrix.output_name }}

      - name: Upload Server artifact
        uses: actions/upload-artifact@v3
        with:
          name: sse-proxy-server-${{ matrix.output_name }}
          path: sse-proxy-server-${{ matrix.output_name }}

  create-release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}-${{ github.sha }}
          release_name: Release ${{ github.ref }}-${{ github.sha }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./sse-proxy-cli-linux/sse-proxy-cli-linux
          asset_name: sse-proxy-cli-linux
          asset_content_type: application/octet-stream

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./sse-proxy-server-linux/sse-proxy-server-linux
          asset_name: sse-proxy-server-linux
          asset_content_type: application/octet-stream

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./sse-proxy-cli-darwin/sse-proxy-cli-darwin
          asset_name: sse-proxy-cli-darwin
          asset_content_type: application/octet-stream

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./sse-proxy-server-darwin/sse-proxy-server-darwin
          asset_name: sse-proxy-server-darwin
          asset_content_type: application/octet-stream
