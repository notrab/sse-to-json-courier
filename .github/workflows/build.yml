name: Build and Release

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types: [created]

jobs:
  build:
    name: Build and Create Artifacts
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goarch: arm64
            goos: windows

    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.20"

      - name: Build CLI
        run: |
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o sse-proxy-cli-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }} ./cmd/cli
        env:
          CGO_ENABLED: 0

      - name: Build Server
        run: |
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o sse-proxy-server-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }} ./cmd/server
        env:
          CGO_ENABLED: 0

      - name: Upload CLI Artifact
        uses: actions/upload-artifact@v3
        with:
          name: sse-proxy-cli-${{ matrix.goos }}-${{ matrix.goarch }}
          path: sse-proxy-cli-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }}

      - name: Upload Server Artifact
        uses: actions/upload-artifact@v3
        with:
          name: sse-proxy-server-${{ matrix.goos }}-${{ matrix.goarch }}
          path: sse-proxy-server-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }}

  release:
    name: Create Release
    needs: build
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3

      - name: Display structure of downloaded files
        run: ls -R

      - name: Zip Artifacts
        run: |
          for dir in sse-proxy-*; do
            zip -r "${dir}.zip" "$dir"
          done

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            *.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
